version: '3.8'

services:
  # Frontend Application
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    restart: unless-stopped

  # Backend API Application
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/code_review_db
      - REDIS_URL=redis://redis:6379
      - ARQ_REDIS_URL=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend:/app
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=code_review_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache and Job Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Arq Worker for Background Jobs
  worker:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    command: arq app.workers.arq_worker.WorkerSettings
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/code_review_db
      - REDIS_URL=redis://redis:6379
      - ARQ_REDIS_URL=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend:/app
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
